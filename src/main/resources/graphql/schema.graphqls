type LoanEnquiry{

	loanEnquiryId:ID!,
	accountnumber:String,
	branchId:String,
	bankId:String,
	loanAmount:Int,
	tenure:Int,
	purpose:String,
	loanType:LoanType
	loanStatus : LoanStatus,
	profession : Profession, 
	monthlyIncome : Float
}

input EnquiryDto {
	accountnumber:String,
	branchId:String,
	bankId:String,
	loanAmount:Int,
	tenure:Int,
	purpose:String,
	loanType:LoanType
	
}

enum LoanType {
	HOME_LOAN
	CAR_LOAN
	EDUCATION_LOAN 
	PERSONAL_LOAN

}

type Mutation{
	createLoanEnquiry(inputLoanEnquiry:EnquiryDto):LoanEnquiry
	deleteLoanEnquiryByEnquiryId(loanEnquiryId : Int) : String
	deleteLoanEnquiryByBankId(bankId : String) : String
	deleteLoanEnquiryByBranchId(branchId : String ) : String
}

type Query {
	getLoanEnquiryByAccountNumber(accountnumber : String) : LoanEnquiry
	getAllLoanEnquiryByBranchId(branchId : String) : [LoanEnquiry]
	getAllLoanEnquiryByBankId(bankId : String) : [LoanEnquiry]
	checkLoanEnquiryByBankId(bankId : String) : Boolean
	checkLoanEnquiryByBranchId(branchId : String) : Boolean
}
enum Profession {
	
	SELF_EMPLOYEED
	GOVERNMENT_EMPLOYEE
	PRIVATE_SECTOR_EMPLOYEE
	PUBLIC_SECTOR_EMPLOYEE 

}

enum LoanStatus {
	
	ACTIVE 
	INACTIVE 
	HOLD
	REJECTED
	IN_PROGRESS

}

input OccupationDto {
	accountnumber : String
	profession : Profession
	monthlyIncome : Float

}

