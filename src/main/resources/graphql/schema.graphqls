type LoanEnquiry{

	loanEnquiryId:ID!,
	accountnumber:String,
	branchId:String,
	bankId:String,
	loanAmount:Int,
	tenure:Int,
	purpose:String,
	loanType:LoanType
}

input LoanEnquiryInput {
	accountnumber:String,
	branchId:String,
	bankId:String,
	loanAmount:Int,
	tenure:Int,
	purpose:String,
	loanType:LoanType
}

enum LoanType {
	HOME_LOAN
	CAR_LOAN
	EDUCATION_LOAN 
	PERSONAL_LOAN

}

type Mutation{
	createLoanEnquiry(inputLoanEnquiry:LoanEnquiryInput):LoanEnquiry
	deleteLoanEnquiryByEnquiryId(loanEnquiryId : Int) : String
	deleteLoanEnquiryByBankId(bankId : String) : String
	deleteLoanEnquiryByBranchId(branchId : String ) : String
}

type Query {
	getLoanEnquiryByAccountNumber(accountnumber : String) : LoanEnquiry
	getAllLoanEnquiryByBranchId(branchId : String) : [LoanEnquiry]
	getAllLoanEnquiryByBankId(bankId : String) : [LoanEnquiry]
	checkLoanEnquiryByBankId(bankId : String) : Boolean
	checkLoanEnquiryByBranchId(branchId : String) : Boolean
}


